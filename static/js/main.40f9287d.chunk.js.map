{"version":3,"sources":["firebase/firebase.js","Context/context.js","keys.js","Components/Buttons/buttons.js","Components/Image/image.js","Components/No-Gifs/no-gifs.js","Components/search-bar/search-bar.js","Components/Image-container/image-container.js","Components/Mainpage/main-page.js","Components/Saved/Saved-Image/saved-image.js","Components/No-Images/no-images.js","Components/Saved/saved.js","Components/Header/header.js","Components/login-signup/login/login.js","Components/login-signup/signup/signup.js","Components/login-signup/login-signup.js","App.js","reportWebVitals.js","index.js"],"names":["createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","collectionRef","collection","get","snapShot","exists","displayName","email","createdAt","Date","set","user","data","console","log","onLoginData","dataRef","saveDataToFirebase","userData","update","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","analytics","GoogleAuthProvider","setCustomParameters","prompt","appContext","createContext","Provider","props","useState","search","setSearch","gifs","setGifs","loading","setLoading","setTest","saved","setSaved","location","setLocation","currentUser","setCurrentUser","isFirstRender","setIsFirstRender","useEffect","fetchData","fetch","response","json","length","id","value","actions","updateSearch","removeItemFromSaved","item","filteredList","filter","i","children","CustomButton","isGoogleButton","onClick","type","className","Image","useContext","src","images","fixed_width","webp","find","image","NoGifs","message","SearchBar","query","setQuery","nouns","Math","floor","random","word","setWord","randomPlaceholder","setInterval","randomNumber","onSubmit","e","preventDefault","onChange","target","placeholder","ImageContainer","map","gif","MainPage","SavedImage","downsized_medium","url","title","NoImages","to","SavedPage","index","Header","history","useHistory","newLocation","useLocation","handleSignout","signOut","push","Login","toggleMethod","currentMethod","setEmail","password","setPassword","incorrectLogin","setIncorrectLogin","handleChange","name","handleSubmit","signInWithEmailAndPassword","redirectAfterGoogleAuth","signInWithPopup","for","SignUp","setDisplayName","confirmedPassword","setConfirmedPassword","passwordMatch","setPasswordMatch","createUserWithEmailAndPassword","SignInAndUp","method","App","onAuthStateChanged","onSnapshot","getDataFromFirestore","firestoreData","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40f9287d.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/analytics';\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAlx7NLSfWvOYIUsT1YSIICW3s17BS3oZI\",\r\n  authDomain: \"gif-search-app-39faa.firebaseapp.com\",\r\n  projectId: \"gif-search-app-39faa\",\r\n  storageBucket: \"gif-search-app-39faa.appspot.com\",\r\n  messagingSenderId: \"954418677105\",\r\n  appId: \"1:954418677105:web:cf01c1c71cb877e04662d0\",\r\n  measurementId: \"G-75Y0HLMX40\"\r\n};\r\n\r\n\r\n//create new user from sign-up form//\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n  const collectionRef = firestore.collection('users');\r\n\r\n  const snapShot = await userRef.get();\r\n  const collectionSnapshot = await collectionRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const {displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        user: {\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        },\r\n        data: {\r\n          additionalData\r\n        }\r\n      })\r\n    } catch(error) {\r\n      console.log('error creating account', error)\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const onLoginData = async(userAuth) => {\r\n\r\n  const dataRef = await firestore.collection(`users`).doc(userAuth);\r\n  const data = await dataRef.get();\r\n\r\n  if (!data.exists) {\r\n    console.log('no data for user')\r\n  } else {\r\n    console.log(data.data())\r\n    return data.data();\r\n  }\r\n};\r\n\r\n\r\nexport const saveDataToFirebase = async (userAuth, data) => {\r\n\r\n  const userRef = firestore.doc(`users/${userAuth}`);\r\n  const collectionRef = firestore.collection(`users/${userAuth}/data`);\r\n  const userData = firestore.collection('users').doc(userAuth);\r\n\r\n  try {\r\n    await userData.update({\r\n      data\r\n    })\r\n  } catch(error) {\r\n    console.log('Error saving data', error)\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n// const app = initializeApp(config)\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\n//Google sign in//\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n","import React, {useState, createContext, useEffect, useRef} from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {saveDataToFirebase} from '../firebase/firebase.js';\r\n\r\nimport Key from '../keys.js'\r\n\r\nexport const appContext = createContext();\r\n\r\nexport const Provider = (props) => {\r\n\r\n  const [search, setSearch] = useState('cats');\r\n  const [gifs, setGifs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [test, setTest] = ('');\r\n  const [saved, setSaved] = useState([]);\r\n  const [location, setLocation] = useState('/');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isFirstRender, setIsFirstRender] = useState(true);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async() => {\r\n      let response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${Key}&q=${search}&limit=24&offset=0&rating=g&lang=en`)\r\n      let data = await response.json()\r\n      console.log(data)\r\n\r\n      if (data.data.length) {\r\n        await setGifs(data.data);\r\n        await setLoading(false);\r\n        setIsFirstRender(false);\r\n      } else {\r\n        setGifs([])\r\n        await setLoading(true);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (currentUser) {\r\n      console.log('triggered')\r\n      saveDataToFirebase(currentUser.id, saved);\r\n    }\r\n\r\n    fetchData(search)\r\n  }, [search, saved])\r\n\r\n\r\n  const removeItemFromSaved = (item) => {\r\n    console.log(item);\r\n    const filteredList = saved.filter(i => i.id !== item)\r\n    setSaved([...filteredList])\r\n  }\r\n\r\n  const updateSearch = (value) => {\r\n    setSearch(value)\r\n  }\r\n\r\n\r\n  return (\r\n    <appContext.Provider value={{\r\n      data: {gifs, search, loading, saved, location, currentUser, isFirstRender},\r\n      actions: {updateSearch, setTest, setSaved, setLocation, setCurrentUser, removeItemFromSaved, setIsFirstRender, setSearch},\r\n    }}>\r\n      {props.children}\r\n    </appContext.Provider>\r\n  )\r\n\r\n}\r\n","const Key = 'ukcN2yaE6mkO1qiWkaf9DlobDlAguWh9'\r\n\r\nexport default Key;\r\n","import React from 'react';\r\nimport './buttons.scss';\r\n\r\nconst CustomButton = ({children, isGoogleButton, onClick, ...rest}) => {\r\n\r\n\r\n  return (\r\n    <button onClick={onClick} type={isGoogleButton ? 'button' : ''} className={`${isGoogleButton ? 'custom-button google' : ''} custom-button`}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CustomButton;\r\n","import React, {useContext} from 'react';\r\nimport {appContext} from '../../Context/context.js';\r\nimport './image.scss';\r\nimport CustomButton from '../Buttons/buttons.js';\r\n\r\nconst Image = (props) => {\r\n\r\n\r\n  const {actions, data} = useContext(appContext);\r\n\r\n  const handleSaveImage = () => {\r\n\r\n    const findExisting = data.saved.find((image) => image.id === props.data.id)\r\n\r\n    if (findExisting) {\r\n      return\r\n    } else {\r\n      actions.setSaved([...data.saved, props.data])\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='image'>\r\n      <img className='gif' src={props.data.images.fixed_width.webp}/>\r\n      {\r\n        data.currentUser ? <button onClick={handleSaveImage} className='save-image-button'>Save</button> : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport './no-gifs.scss';\r\n\r\nconst NoGifs = ({message}) => {\r\n\r\n  return (\r\n    <div className='no-gifs-container'>\r\n      <h2 className='no-gifs-desc'>{message}</h2>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default NoGifs\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {appContext} from '../../Context/context.js';\r\nimport './search-bar.scss';\r\n\r\nconst SearchBar = () => {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const {data, actions} = useContext(appContext);\r\n\r\n  let nouns = [\r\n    'cats',\r\n    'dogs',\r\n    'trees',\r\n    'pizza',\r\n    'space',\r\n    'computers',\r\n    'crystals',\r\n    'colors',\r\n    'rainbow',\r\n    'coffee',\r\n    'food',\r\n    'beaches',\r\n    'funny',\r\n    'weird',\r\n    'funny',\r\n    'famous',\r\n    'interesting',\r\n    'memes',\r\n    'cute',\r\n    'scary',\r\n    'movies',\r\n    'robots',\r\n    'cars',\r\n    'sports',\r\n    'disco',\r\n    'fractals',\r\n    'pigs'\r\n  ]\r\n\r\n  const [word, setWord] = useState(nouns[Math.floor(Math.random() * (nouns.length - 1) + 1)])\r\n\r\n  useEffect(() => {\r\n    randomPlaceholder();\r\n  }, [])\r\n\r\n  const randomPlaceholder = () => {\r\n    setInterval(() => {\r\n      let randomNumber = Math.floor(Math.random() * (nouns.length - 1) + 1);\r\n      setWord(nouns[randomNumber])\r\n    }, 3000)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    actions.updateSearch(query);\r\n    setQuery('');\r\n  }\r\n\r\n  return (\r\n    <div className='search-bar'>\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <input className='input-field' onChange={handleChange} type='text' placeholder={`Search for ${word}`} value={query} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n","import './image-container.scss';\r\nimport React, {useContext, useState, useEffect} from 'react';\r\nimport {appContext} from '../../Context/context.js';\r\n\r\nimport Image from '../Image/image.js';\r\nimport NoGifs from '../No-Gifs/no-gifs.js';\r\nimport SearchBar from '../search-bar/search-bar.js';\r\n\r\nconst ImageContainer = () => {\r\n\r\n  const {data, loading} = useContext(appContext);\r\n\r\n  return (\r\n    <div className='image-page-container'>\r\n\r\n      <div className='search-bar-comtainer'>\r\n        <SearchBar />\r\n      </div>\r\n\r\n    {\r\n      data.loading\r\n      ?\r\n      (\r\n        <NoGifs message={data.isFirstRender ? 'Loading..' :`No images found for ${data.search || null}, search again.`}/>\r\n      ) : (\r\n        <div className='image-container'>\r\n          {data.gifs.map((gif) => <Image data={gif} />)}\r\n        </div>\r\n      )\r\n    }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ImageContainer;\r\n","import React from 'react';\r\n\r\nimport ImageContainer from '../Image-container/image-container.js';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <ImageContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage;\r\n","import React, {useContext} from 'react';\r\nimport {appContext} from '../../../Context/context.js';\r\n\r\nimport './saved-image.scss';\r\n\r\nconst SavedImage = ({data}) => {\r\n\r\n  const {actions} = useContext(appContext);\r\n\r\n  const handleRemove = () => {\r\n    actions.removeItemFromSaved(data.id);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='saved-image-container'>\r\n\r\n      <div className='image-saved'>\r\n        <img className='actual-saved-image' src={data.images.downsized_medium.url}/>\r\n        <button className='remove-button' onClick={handleRemove} >Remove</button>\r\n      </div>\r\n\r\n      <div className='title-info'>\r\n        <h3>{data.title}</h3>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedImage;\r\n","import React, {useContext} from 'react';\r\nimport {appContext} from '../../Context/context.js';\r\nimport {Link} from 'react-router-dom';\r\nimport './no-images.scss';\r\n\r\nconst NoImages = () => {\r\n\r\n  const {data} = useContext(appContext);\r\n\r\n  return (\r\n    <div className='no-images-container'>\r\n\r\n      {\r\n        data.saved.length === 0 && data.currentUser !== null\r\n        ? <h2 className='no-images-desc'>Images you add will show here</h2>\r\n        : <h2 className='no-images-desc'>Please <Link className='direct-to-login' to='/login'>Login</Link> to save images</h2>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default NoImages;\r\n","import React, {useContext} from 'react';\r\nimport {appContext} from '../../Context/context.js';\r\nimport './saved.scss';\r\n\r\nimport SavedImage from './Saved-Image/saved-image.js';\r\nimport NoImages from '../No-Images/no-images.js';\r\n\r\n\r\nconst SavedPage = () => {\r\n\r\n  const {data, actions} = useContext(appContext);\r\n\r\n  return (\r\n    <div className='saved-page-container'>\r\n      {\r\n        data.saved.length\r\n        ? data.saved.map((image, index) => <SavedImage data={image} key={image.id} />)\r\n        : <NoImages />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedPage;\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport {Link, useHistory, useLocation} from 'react-router-dom';\r\nimport './header.scss';\r\nimport {appContext} from '../../Context/context.js';\r\nimport CustomButton from '../Buttons/buttons.js';\r\nimport {auth} from '../../firebase/firebase.js';\r\n\r\nconst Header = () => {\r\n\r\n  const {data: {search, location, saved, currentUser}, actions} = useContext(appContext);\r\n\r\n  let history = useHistory();\r\n  const newLocation = useLocation();\r\n\r\n  useEffect( () => {\r\n  }, [newLocation])\r\n\r\n  const handleSignout = async() => {\r\n    await auth.signOut();\r\n    await actions.setSaved([]);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='nav-bar-container'>\r\n\r\n      <div onClick={() => {\r\n        history.push('/')\r\n        actions.setSearch('cats')\r\n      }} className='title'>\r\n        <span>Gif Search</span>\r\n      </div>\r\n\r\n      <div className='login-out-buttons'>\r\n\r\n\r\n      </div>\r\n\r\n\r\n      <div className='login-out-buttons'>\r\n          <Link className='saved' to='/' onClick={() => actions.setSearch('cats')} >Home</Link>\r\n          <Link className='saved' to='/saved'>Saved</Link>\r\n          {\r\n            currentUser\r\n            ? <span className='logout' onClick={handleSignout}>Signout</span>\r\n            : <Link className='saved' to='/login'>Login</Link>\r\n          }\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState, useRef} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './login.scss';\r\nimport CustomButton from '../../Buttons/buttons.js';\r\nimport {signInWithGoogle} from '../../../firebase/firebase.js';\r\nimport {auth} from '../../../firebase/firebase.js';\r\n\r\n\r\nconst Login = ({toggleMethod, currentMethod}) => {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory();\r\n  const [incorrectLogin, setIncorrectLogin] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'email') {\r\n      setEmail(e.target.value)\r\n    } else {\r\n      setPassword(e.target.value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setIncorrectLogin(false);\r\n      history.push('/');\r\n    } catch(error) {\r\n      console.log('error signing in w/ u/p', error)\r\n      setIncorrectLogin(true);\r\n    }\r\n  }\r\n\r\n  const redirectAfterGoogleAuth = async() => {\r\n\r\n    try {\r\n      await signInWithGoogle();\r\n      history.push('/')\r\n\r\n    } catch(error) {\r\n      console.log('error signing in with google')\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <h3>Log in with existing account</h3>\r\n\r\n      <form className='login-form' onSubmit={handleSubmit}>\r\n\r\n        <label for='email'>Email</label>\r\n        <input type='email' name='email' value={email} onChange={handleChange}/>\r\n\r\n        <label for='password'>Password</label>\r\n        <input type='password' name='password' value={password} onChange={handleChange}/>\r\n\r\n        <div className='sign-in-buttons'>\r\n          <CustomButton>Sign in</CustomButton>\r\n          <CustomButton isGoogleButton onClick={redirectAfterGoogleAuth}>Google</CustomButton>\r\n        </div>\r\n\r\n        <p className={incorrectLogin ? 'incorrect-login' : 'hidden'}>Incorrect login</p>\r\n\r\n        <span className='toggle-method' onClick={() => toggleMethod(!currentMethod)}> Don't have an account? Create one! </span>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport '../login/login.scss';\r\nimport {auth, createUserProfileDocument} from '../../../firebase/firebase.js';\r\n\r\nimport CustomButton from '../../Buttons/buttons.js';\r\n\r\nconst SignUp = ({toggleMethod, currentMethod}) => {\r\n\r\n  const [displayName, setDisplayName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmedPassword, setConfirmedPassword] = useState('')\r\n  const [passwordMatch, setPasswordMatch] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'displayName') {\r\n      setDisplayName(e.target.value)\r\n    } else if (e.target.name === 'email') {\r\n      setEmail(e.target.value)\r\n    } else if (e.target.name === 'password') {\r\n      setPassword(e.target.value)\r\n    } else if (e.target.name === 'confirmedPassword') {\r\n      setConfirmedPassword(e.target.value)\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    console.log(email, password)\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmedPassword) {\r\n      setPasswordMatch(false);\r\n      return\r\n    }\r\n\r\n    try {\r\n      const {user} = await auth.createUserWithEmailAndPassword(email, password)\r\n      await createUserProfileDocument(user, {displayName});\r\n      setDisplayName('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmedPassword('');\r\n      setPasswordMatch(true);\r\n      history.push('/')\r\n    } catch(error) {\r\n      console.log('Error during signup', error)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <h3 >Create a new account</h3>\r\n\r\n      <form className='login-form' onSubmit={handleSubmit}>\r\n\r\n        <label for='displayName'>Username</label>\r\n        <input type='displayName' name='displayName' onChange={handleChange} value={displayName}/>\r\n\r\n        <label for='email'>Email</label>\r\n        <input type='email' name='email' onChange={handleChange} value={email}/>\r\n\r\n        <label className={passwordMatch ? '' : 'no-match'} for='password'>Password</label>\r\n        <input type='password' name='password' onChange={handleChange} value={password}/>\r\n\r\n        <label className={passwordMatch ? '' : 'no-match'} for='confirmedPassword'>Confirm Password</label>\r\n        <input type='password' name='confirmedPassword' onChange={handleChange} value={confirmedPassword}/>\r\n\r\n        <CustomButton type='submit' >Sign up!</CustomButton>\r\n\r\n        <span className='toggle-method' onClick={() => toggleMethod(!currentMethod)}> Already have an account? Sign in! </span>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp;\r\n","import React, {useState} from 'react';\r\nimport './login-signup.scss';\r\n\r\nimport Login from './login/login.js';\r\nimport SignUp from './signup/signup.js';\r\n\r\nconst SignInAndUp = () => {\r\n\r\n  const [method, toggleMethod] = useState(true)\r\n\r\n  return (\r\n    <div className='sign-in-and-up-container'>\r\n\r\n      {\r\n        method\r\n        ? <Login toggleMethod={toggleMethod} currentMethod={method}/>\r\n        : <SignUp toggleMethod={toggleMethod} currentMethod={method}/>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignInAndUp;\r\n","import './App.scss';\nimport React, {useEffect, useState, useContext} from 'react';\nimport {auth, createUserProfileDocument, onLoginData} from './firebase/firebase.js';\nimport {appContext} from './Context/context.js';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n//Components//\nimport MainPage from './Components/Mainpage/main-page.js';\nimport SavedPage from './Components/Saved/saved.js';\nimport Header from './Components/Header/header.js';\nimport SignInAndUp from './Components/login-signup/login-signup.js';\n\n\nfunction App() {\n\n  const {data, actions} = useContext(appContext);\n\n\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n\n    unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth, data.saved);\n\n        console.log(userAuth);\n        if (data.isFirstRender) {\n          userRef.onSnapshot(snapShot => {\n            actions.setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data,\n              userData: {\n                displayName: userAuth.displayName,\n                email: userAuth.email,\n              }\n            })\n          })\n        }\n\n        const getDataFromFirestore = async() => {\n          const firestoreData = await onLoginData(userAuth.uid);\n          const response = await firestoreData;\n          console.log(response)\n          if (response.data.length) {\n            const data = await response.data.map(item => item);\n            await actions.setSaved([...data]);\n          } else {\n            return\n          }\n\n        }\n        getDataFromFirestore();\n      }\n\n      actions.setCurrentUser(userAuth);\n      actions.setIsFirstRender(false);\n    })\n\n\n\n  }, [])\n\n  return (\n    <div className=\"app-container\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={MainPage} />\n          <Route path='/saved' component={SavedPage} />\n          <Route path='/login' component={SignInAndUp} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from './Context/context.js';\n\nReactDOM.render(\n  <Provider>\n    <React.StrictMode>\n    <div className='main-app-container'>\n      <App />\n    </div>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}